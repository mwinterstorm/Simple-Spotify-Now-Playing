[
    {
        "id": "2654f070e3870c4b",
        "type": "group",
        "z": "64c10cbe6a24b687",
        "name": "/spotify",
        "style": {
            "label": true
        },
        "nodes": [
            "09be260be195cd7f",
            "e704461c03c787f0",
            "1e0790ad9ecd35a4",
            "f70e88b4c3dab11d",
            "760717e21b1612bd"
        ],
        "x": 204,
        "y": 189,
        "w": 1232,
        "h": 774
    },
    {
        "id": "09be260be195cd7f",
        "type": "group",
        "z": "64c10cbe6a24b687",
        "g": "2654f070e3870c4b",
        "name": "Main page",
        "style": {
            "label": true
        },
        "nodes": [
            "b852d5829934f97f",
            "39f64dd8aff764b6",
            "277881d8699aa50a",
            "ade6b2d59b516cf8",
            "a5fd213f815476a1",
            "7b7b2270bacb4e17",
            "139c9f2832a85c54"
        ],
        "x": 310,
        "y": 807,
        "w": 1096,
        "h": 130
    },
    {
        "id": "e83aa6d3209a38ac",
        "type": "subflow",
        "name": "Screensaver",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 68,
                "y": 112,
                "wires": [
                    {
                        "id": "9a75ee5b583a105d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1140,
                "y": 96,
                "wires": [
                    {
                        "id": "9c08e41f22be121c",
                        "port": 0
                    },
                    {
                        "id": "ca09a18b35fb722a",
                        "port": 0
                    },
                    {
                        "id": "e397625c6bdccb9a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9c08e41f22be121c",
        "type": "change",
        "z": "e83aa6d3209a38ac",
        "name": "Update Now Playing Data",
        "rules": [
            {
                "t": "set",
                "p": "payload.playStatus",
                "pt": "msg",
                "to": "Top Artists",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.item.name",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.name",
                "pt": "msg",
                "to": "The songs by ",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.item.album.images[0].url",
                "pt": "msg",
                "to": "payload.images[0].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.images[2].url",
                "pt": "msg",
                "to": "payload.images[2].url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 894,
        "y": 48,
        "wires": [
            []
        ]
    },
    {
        "id": "c5880add0610bda0",
        "type": "spotify",
        "z": "e83aa6d3209a38ac",
        "name": "Get Top Artist",
        "auth": "934bab396b45618f",
        "api": "getMyTopArtists",
        "x": 484,
        "y": 48,
        "wires": [
            [
                "dc56db5cab2d2f93"
            ]
        ]
    },
    {
        "id": "dc56db5cab2d2f93",
        "type": "random-item",
        "z": "e83aa6d3209a38ac",
        "name": "Random Artist",
        "input": "payload.items",
        "inputType": "msg",
        "output": "payload",
        "outputType": "msg",
        "number": 1,
        "x": 684,
        "y": 48,
        "wires": [
            [
                "9c08e41f22be121c"
            ]
        ]
    },
    {
        "id": "62de21d8aa365399",
        "type": "random-item",
        "z": "e83aa6d3209a38ac",
        "name": "Random Track",
        "input": "payload.items",
        "inputType": "msg",
        "output": "payload",
        "outputType": "msg",
        "number": 1,
        "x": 684,
        "y": 108,
        "wires": [
            [
                "e397625c6bdccb9a"
            ]
        ]
    },
    {
        "id": "ae4286846f250701",
        "type": "spotify",
        "z": "e83aa6d3209a38ac",
        "name": "Get Top Tracks",
        "auth": "934bab396b45618f",
        "api": "getMyTopTracks",
        "x": 484,
        "y": 108,
        "wires": [
            [
                "62de21d8aa365399"
            ]
        ]
    },
    {
        "id": "2e456486e4c8b746",
        "type": "random-item",
        "z": "e83aa6d3209a38ac",
        "name": "Random Track",
        "input": "payload.items",
        "inputType": "msg",
        "output": "payload",
        "outputType": "msg",
        "number": 1,
        "x": 684,
        "y": 168,
        "wires": [
            [
                "ca09a18b35fb722a"
            ]
        ]
    },
    {
        "id": "b0aad980a1c189fe",
        "type": "spotify",
        "z": "e83aa6d3209a38ac",
        "name": "Get Recent Tracks",
        "auth": "934bab396b45618f",
        "api": "getMyRecentlyPlayedTracks",
        "x": 554,
        "y": 208,
        "wires": [
            [
                "2e456486e4c8b746"
            ]
        ]
    },
    {
        "id": "9a75ee5b583a105d",
        "type": "random",
        "z": "e83aa6d3209a38ac",
        "name": "Random",
        "low": 1,
        "high": "3",
        "inte": "true",
        "property": "random",
        "x": 172,
        "y": 112,
        "wires": [
            [
                "810e0b8400e4aa76"
            ]
        ]
    },
    {
        "id": "810e0b8400e4aa76",
        "type": "switch",
        "z": "e83aa6d3209a38ac",
        "name": "",
        "property": "random",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "183540qegh",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 306,
        "y": 112,
        "wires": [
            [],
            [
                "2ad69528e1b8419e"
            ]
        ]
    },
    {
        "id": "ca09a18b35fb722a",
        "type": "change",
        "z": "e83aa6d3209a38ac",
        "name": "Update Now Playing Data",
        "rules": [
            {
                "t": "set",
                "p": "payload.playStatus",
                "pt": "msg",
                "to": "Recent Tracks",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.item.name",
                "pt": "msg",
                "to": "payload.track.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.name",
                "pt": "msg",
                "to": "payload.track.album.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.images[0].url",
                "pt": "msg",
                "to": "payload.track.album.images[0].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.images[2].url",
                "pt": "msg",
                "to": "payload.track.album.images[2].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.artists[0].name",
                "pt": "msg",
                "to": "payload.track.artists[0].name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 894,
        "y": 176,
        "wires": [
            []
        ]
    },
    {
        "id": "e397625c6bdccb9a",
        "type": "change",
        "z": "e83aa6d3209a38ac",
        "name": "Update Now Playing Data",
        "rules": [
            {
                "t": "set",
                "p": "payload.playStatus",
                "pt": "msg",
                "to": "Top Tracks",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.item.name",
                "pt": "msg",
                "to": "payload.track.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.name",
                "pt": "msg",
                "to": "payload.track.album.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.images[0].url",
                "pt": "msg",
                "to": "payload.track.album.images[0].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.images[2].url",
                "pt": "msg",
                "to": "payload.track.album.images[2].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.item.album.artists[0].name",
                "pt": "msg",
                "to": "payload.track.artists[0].name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 894,
        "y": 112,
        "wires": [
            []
        ]
    },
    {
        "id": "2ad69528e1b8419e",
        "type": "function",
        "z": "e83aa6d3209a38ac",
        "name": "",
        "func": "msg.params = [\n    { limit: 50} /* Options */\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 208,
        "wires": [
            [
                "b0aad980a1c189fe"
            ]
        ]
    },
    {
        "id": "b852d5829934f97f",
        "type": "spotify",
        "z": "64c10cbe6a24b687",
        "g": "09be260be195cd7f",
        "name": "",
        "auth": "934bab396b45618f",
        "api": "getMyCurrentPlaybackState",
        "x": 456,
        "y": 848,
        "wires": [
            [
                "39f64dd8aff764b6"
            ]
        ]
    },
    {
        "id": "39f64dd8aff764b6",
        "type": "switch",
        "z": "64c10cbe6a24b687",
        "g": "09be260be195cd7f",
        "name": "",
        "property": "payload.is_playing",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 658,
        "y": 848,
        "wires": [
            [
                "277881d8699aa50a"
            ],
            [
                "ade6b2d59b516cf8"
            ]
        ]
    },
    {
        "id": "277881d8699aa50a",
        "type": "change",
        "z": "64c10cbe6a24b687",
        "g": "09be260be195cd7f",
        "name": "Set Now Playing Data",
        "rules": [
            {
                "t": "set",
                "p": "image",
                "pt": "flow",
                "to": "payload.item.album.images[0].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "favicon",
                "pt": "flow",
                "to": "payload.item.album.images[2].url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 884,
        "y": 848,
        "wires": [
            [
                "7b7b2270bacb4e17"
            ]
        ]
    },
    {
        "id": "ade6b2d59b516cf8",
        "type": "subflow:e83aa6d3209a38ac",
        "z": "64c10cbe6a24b687",
        "g": "09be260be195cd7f",
        "name": "",
        "x": 678,
        "y": 896,
        "wires": [
            [
                "139c9f2832a85c54"
            ]
        ]
    },
    {
        "id": "a5fd213f815476a1",
        "type": "http response",
        "z": "64c10cbe6a24b687",
        "g": "09be260be195cd7f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 896,
        "wires": []
    },
    {
        "id": "7b7b2270bacb4e17",
        "type": "template",
        "z": "64c10cbe6a24b687",
        "g": "09be260be195cd7f",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n\n<head>\n    <title id=\"id_title\">Simple Spotify Now Playing</title>\n    <link id=\"id_favicon\" rel=\"icon\" type=\"image/png\" href=\"{{{flow.favicon}}}\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <meta name=\"description\" content=\"Simple Spotify Now Playing\">\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n        integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n    <style>\n        body, html {\n            /* height: 140%; */\n            height: 100vh;\n            margin: 0;\n            font-family: Arial, Helvetica, sans-serif;\n            background-color: black;\n            overflow: hidden;\n        }\n\n        .mcwr-align {\n            align-items: baseline;\n        }\n\n        .mcwr-right {\n            text-align: right;\n        }\n\n        .mcwr-left {\n            text-align: left;\n        }\n\n        .mcwr-bg-image {\n            filter: blur(8px) hue-rotate(190deg) brightness(0.7);\n            -webkit-filter: blur(8px) hue-rotate(190deg) brightness(0.7);\n            height: 110vh;\n            width: 110%;\n            background-position: center;\n            background-repeat: no-repeat;\n            background-size: cover;\n            position: absolute;\n            z-index: 1;\n        }\n\n        .mcwr-content {\n            color: white;\n            position: absolute;\n            font-weight: bolder;\n            z-index: 10;\n            padding: 5%;\n        }\n\n        .mcwr-imgResponsive {\n            width: 75%;\n            height: auto;\n            border-radius: 6%;\n            padding-top: 3%;\n            padding-bottom: 3%;\n        }\n\n        .mcwr-limitWidth {\n            max-width: 46vw;\n        }\n    </style>\n</head>\n\n<body>\n    <div style=\"position: relative;\">\n        <div id=\"id_bgImage\" class=\"mcwr-bg-image\" style=\"background-image:url({{flow.image}});\"></div>\n        <div class=\"container-fluid mcwr-content\">\n            <div class=\"row mcwr-align\"> <!-- Track title and status - large screen-->\n                <div class=\"col-8 col-sm-12 mcwr-right mcwr-limitWidth\">\n                    <h1 id=\"id_track\">Simple Spotify Now Playing</h1>\n                </div>            \n                <div class=\"col-4 col-sm-0 mcwr-left\">\n                    <p id=\"id_status\"></p>\n                </div>\n            </div>\n            <div class=\"row mcwr-align d-none d-xxl-block\"> <!-- Track Art and Album Artist Details - Large Screen -->\n                <div class=\"col-sm-8 mcwr-right mcwr-limitWidth\">\n                    <img id=\"id_albumArt\" src=\"{{{flow.image}}}\"\n                        class=\"mcwr-imgResponsive\">\n                    <h3 id=\"id_albumArtist\">By Mark White-Robinson (https://github.com/mwinterstorm/Simple-Spotify-Now-Playing)</h3>\n                </div>\n                <div class=\"col-sm-4\"></div>\n            </div>\n            <div class=\"row mcwr-align d-xxl-none\"> <!-- Track Art and Album Artist Details - Small Screen -->\n                <div class=\"col-sm-10 mcwr-right\">\n                    <img id=\"id2_albumArt\" src=\"{{{flow.image}}}\"\n                        class=\"mcwr-imgResponsive\">\n                    <h3 id=\"id_albumArtist\">By Mark White-Robinson (https://github.com/mwinterstorm/Simple-Spotify-Now-Playing)</h3>\n                </div>\n                <div class=\"col-sm-2\"></div>\n            </div>\n            <div class=\"row mcwr-align\">\n                <div class=\"col-sm-8 mcwr-right mcwr-limitWidth d-none d-xl-block\">\n                    <p id=\"id_time\"></p>\n\n                </div>\n\n                <div class=\"col-sm-4 mcwr-left\">\n                    <div>\n                        <input hidden id=\"id_skipbutton\" type=\"submit\" class=\"btn-default\" value=\"Skip\"\n                            onclick=\"skip()\">\n                        <input id=\"id_pausebutton\" type=\"submit\" class=\"btn-default\" value=\"Play / Pause\"\n                            onclick=\"playpause()\">\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"row mcwr-align\">\n\n            </div>\n        </div>\n    </div>\n</body>\n<footer>\n    <p>Copyright Mark White-Robinson</p>\n</footer>\n<script src=\"https://code.jquery.com/jquery-3.5.1.js\"></script>\n<script>\n    // **** MAIN TRIGGER FUNCTION ****\n    $(document).ready(function () {\n        setInterval(updateInfo, 2000); //Run update function every 2 seconds - between 1 and 2 spotify API calls\n    });\n    // **** END MAIN TRIGGER FUNCTION ****\n\n    // **** CLOCK ****\n    let a;\n    let m;\n    let time;\n    function addZero(x) {\n        if (x < 10) {\n            return x = '0' + x;\n        } else {\n            return x;\n        }\n    }\n    setInterval(() => {\n        a = new Date();\n        m = a.getMinutes()\n        time = a.getHours() + \":\" + addZero(m);\n        document.getElementById(\"id_time\").innerHTML = time;\n    }, 5000); // Clock updates every 5 seconds\n    // **** END CLOCK ****\n\n    // **** FUNCTION DEFINITIONS ****\n    let jsonObject; //used in updateInfo / response from updateInfo() fetch call\n    let pauseUpdateCounter = 0; // used in updateInfo()\n    const funcUrl = window.location.href; // get URL of current page\n\n    async function updateInfo() { // Main function for updating info\n        let response = await fetch(funcUrl + '/?action=updateInfo&pauseCounter=' + pauseUpdateCounter, {\n            headers: {\n                Authentication: '{{{flow.authstatus}}}'\n            }\n        });\n        if (response.ok) {\n            jsonObject = await response.json();\n            let currentTrack = document.getElementById(\"id_track\").innerHTML;\n            if (jsonObject.is_playing == true) {\n                let setTrack = jsonObject.item.name;\n                pauseUpdateCounter += 7;\n                if (currentTrack != setTrack) {\n                    setUpdate();\n                } else {\n                    setPauseButton();\n                    setSkipButton();\n                }\n            } else if (jsonObject.is_playing != true) {\n                if (jsonObject.pauseUpdate == true) {\n                    setUpdate();\n                    pauseUpdateCounter = 0;\n                } else if (currentTrack == 'Simple Spotify Now Playing') {\n                    pauseUpdateCounter += 999;\n                    setPauseButton();\n                    setSkipButton();\n                } else {\n                    pauseUpdateCounter += 1;\n                    setPauseButton();\n                    setSkipButton();\n                }\n            }\n        } else {\n            let errorMsg = \"HTTP-Error: \" + response.status;\n            alert(\"HTTP-Error: \" + response.status);\n            return errorMsg;\n        };\n    }\n\n    function setUpdate() { // Used in UpdateInfo()\n        let setTrack = jsonObject.item.name;\n        let setStatus = jsonObject.playStatus;\n        let setAlbum = jsonObject.item.album.name;\n        let setArtist = jsonObject.item.album.artists[0].name;\n        let setAlbumArt = jsonObject.item.album.images[0].url;\n        let setFavicon = jsonObject.item.album.images[2].url;\n        let setbgImage = jsonObject.bgImage;\n        document.getElementById(\"id_title\").innerHTML = setTrack; //update page title\n        document.getElementById(\"id_track\").innerHTML = setTrack; //update track above album art\n        document.getElementById(\"id_status\").innerHTML = setStatus; // update status (e.g. Now Playing / Recent Tracks)\n        document.getElementById(\"id_albumArtist\").innerHTML = setAlbum + \" by \" + setArtist; // Update caption under image\n        document.getElementById(\"id_albumArt\").src = setAlbumArt; //Update album art image\n        document.getElementById(\"id2_albumArt\").src = setAlbumArt; //Update album art image\n        document.getElementById(\"id_favicon\").href = setFavicon; // Update favicon\n        document.getElementById(\"id_bgImage\").style = setbgImage; // Update background image\n        setPauseButton(); //update play pause button\n        setSkipButton(); //ensure skip button showing\n    };\n\n    function setSkipButton() { // called in UpdateInfo() and setUpdate() to show / hide skip button based on playing state\n        let skip = document.getElementById(\"id_skipbutton\");\n        if (jsonObject.is_playing == true) {\n            skip.removeAttribute(\"hidden\");\n        } else {\n            skip.setAttribute(\"hidden\", true);\n        }\n    }\n\n    function setPauseButton() { // // called in UpdateInfo() and setUpdate() to ensure pause button has correct label\n        let setPause = jsonObject.playpause;\n        let currentPause = document.getElementById(\"id_pausebutton\").value\n        if (setPause != currentPause) {\n            document.getElementById(\"id_pausebutton\").value = setPause;\n            pauseUpdateCounter += 100;\n        };\n    };\n\n    async function skip() { // Function runs on press of skip button\n        let response = await fetch(funcUrl + '/?action=skip', {\n            headers: {\n                Authentication: '{{{flow.authstatus}}}'\n            }\n        });\n        if (response.ok) {\n            setTimeout(updateInfo, 1450);\n        } else {\n            let errorMsg = \"HTTP-Error: \" + response.status;\n            alert(\"HTTP-Error: \" + response.status);\n            return errorMsg;\n        };\n    };\n\n    async function playpause() { // Function runs on press of playpause button\n        let response = await fetch(funcUrl + '/?action=playPause', {\n            headers: {\n                Authentication: '{{{flow.authstatus}}}'\n            }\n        });\n        if (response.ok) {\n            setPauseButton();\n            setTimeout(updateInfo, 1450);\n        } else {\n            let errorMsg = \"HTTP-Error: \" + response.status;\n            alert(\"HTTP-Error: \" + response.status);\n            return errorMsg;\n        };\n    };\n</script>\n</body>\n\n</html>",
        "output": "str",
        "x": 1202,
        "y": 864,
        "wires": [
            [
                "a5fd213f815476a1"
            ]
        ]
    },
    {
        "id": "139c9f2832a85c54",
        "type": "change",
        "z": "64c10cbe6a24b687",
        "g": "09be260be195cd7f",
        "name": "Initial Data",
        "rules": [
            {
                "t": "set",
                "p": "image",
                "pt": "flow",
                "to": "payload.track.album.images[0].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "favicon",
                "pt": "flow",
                "to": "payload.track.album.images[2].url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 854,
        "y": 896,
        "wires": [
            [
                "7b7b2270bacb4e17"
            ]
        ]
    },
    {
        "id": "934bab396b45618f",
        "type": "spotify-auth",
        "name": "Spotify",
        "scope": "user-read-playback-state\nuser-read-private\nuser-follow-read\nuser-library-read\nuser-read-playback-position\nplaylist-read-private\nuser-top-read\nuser-read-currently-playing\nuser-read-recently-played"
    },
    {
        "id": "e704461c03c787f0",
        "type": "group",
        "z": "64c10cbe6a24b687",
        "g": "2654f070e3870c4b",
        "name": "Buttons",
        "style": {
            "label": true
        },
        "nodes": [
            "ac99553f7cbc4f32",
            "f41c710db9c73a5c",
            "a30ae1cd6bb20695",
            "f280db5bdf31ee23",
            "f53a08b6483cb98c",
            "02e070f0b2257cf4",
            "9fa926fa4adbf982",
            "512d95fb622a47d1",
            "4cd8981aa2833d68"
        ],
        "x": 566,
        "y": 455,
        "w": 844,
        "h": 178
    },
    {
        "id": "ac99553f7cbc4f32",
        "type": "spotify",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "auth": "03c549ed8930bddb",
        "api": "pause",
        "x": 1202,
        "y": 496,
        "wires": [
            [
                "02e070f0b2257cf4"
            ]
        ]
    },
    {
        "id": "f41c710db9c73a5c",
        "type": "spotify",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "auth": "934bab396b45618f",
        "api": "getMyCurrentPlaybackState",
        "x": 840,
        "y": 496,
        "wires": [
            [
                "a30ae1cd6bb20695"
            ]
        ]
    },
    {
        "id": "a30ae1cd6bb20695",
        "type": "switch",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "property": "payload.is_playing",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1042,
        "y": 496,
        "wires": [
            [
                "ac99553f7cbc4f32"
            ],
            [
                "f280db5bdf31ee23"
            ]
        ]
    },
    {
        "id": "f280db5bdf31ee23",
        "type": "spotify",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "auth": "03c549ed8930bddb",
        "api": "play",
        "x": 1170,
        "y": 544,
        "wires": [
            [
                "02e070f0b2257cf4"
            ]
        ]
    },
    {
        "id": "f53a08b6483cb98c",
        "type": "spotify",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "auth": "03c549ed8930bddb",
        "api": "skipToNext",
        "x": 790,
        "y": 592,
        "wires": [
            [
                "02e070f0b2257cf4"
            ]
        ]
    },
    {
        "id": "02e070f0b2257cf4",
        "type": "http response",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1324,
        "y": 592,
        "wires": []
    },
    {
        "id": "9fa926fa4adbf982",
        "type": "switch",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "property": "req.headers.authentication",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "authstatus",
                "vt": "flow"
            },
            {
                "t": "eq",
                "v": "authstatus",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 642,
        "y": 592,
        "wires": [
            [
                "512d95fb622a47d1"
            ],
            [
                "f53a08b6483cb98c"
            ]
        ]
    },
    {
        "id": "512d95fb622a47d1",
        "type": "http response",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 764,
        "y": 544,
        "wires": []
    },
    {
        "id": "4cd8981aa2833d68",
        "type": "switch",
        "z": "64c10cbe6a24b687",
        "g": "e704461c03c787f0",
        "name": "",
        "property": "req.headers.authentication",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "authstatus",
                "vt": "flow"
            },
            {
                "t": "eq",
                "v": "authstatus",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 642,
        "y": 496,
        "wires": [
            [
                "512d95fb622a47d1"
            ],
            [
                "f41c710db9c73a5c"
            ]
        ]
    },
    {
        "id": "03c549ed8930bddb",
        "type": "spotify-auth",
        "name": "Spotify All Scopes",
        "scope": "user-read-playback-state\nuser-modify-playback-state\nuser-read-private\nuser-follow-modify\nugc-image-upload\nuser-follow-read\nuser-library-modify\nuser-library-read\nstreaming\nuser-read-playback-position\nplaylist-modify-private\nplaylist-read-collaborative\napp-remote-control\nuser-read-email\nplaylist-read-private\nuser-top-read\nplaylist-modify-public\nuser-read-currently-playing\nuser-read-recently-played",
        "info": "noderedweball"
    },
    {
        "id": "1e0790ad9ecd35a4",
        "type": "group",
        "z": "64c10cbe6a24b687",
        "g": "2654f070e3870c4b",
        "name": "InfoRefresh",
        "style": {
            "label": true
        },
        "nodes": [
            "b903d41feea6da73",
            "1b287c91625de4db",
            "d55daa334edfc1c3",
            "20eff3cac95cc869",
            "69d7477a89bf5c91",
            "38e82f10caba549f",
            "864fbc661d21df94",
            "3dc4f300ede964da",
            "884560b8fb09b0ad",
            "a0ee666226369892",
            "4021da310e7ff026",
            "0183632404f95517"
        ],
        "x": 310,
        "y": 215,
        "w": 1100,
        "h": 226
    },
    {
        "id": "b903d41feea6da73",
        "type": "http response",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1324,
        "y": 336,
        "wires": []
    },
    {
        "id": "1b287c91625de4db",
        "type": "spotify",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "auth": "934bab396b45618f",
        "api": "getMyCurrentPlaybackState",
        "x": 584,
        "y": 304,
        "wires": [
            [
                "38e82f10caba549f"
            ]
        ]
    },
    {
        "id": "d55daa334edfc1c3",
        "type": "http response",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 524,
        "y": 256,
        "wires": []
    },
    {
        "id": "20eff3cac95cc869",
        "type": "switch",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "property": "req.headers.authentication",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "authstatus",
                "vt": "flow"
            },
            {
                "t": "eq",
                "v": "authstatus",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 386,
        "y": 272,
        "wires": [
            [
                "d55daa334edfc1c3"
            ],
            [
                "1b287c91625de4db"
            ]
        ]
    },
    {
        "id": "69d7477a89bf5c91",
        "type": "change",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.playStatus",
                "pt": "msg",
                "to": "Now Playing",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "image",
                "pt": "flow",
                "to": "payload.item.album.images[0].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.playpause",
                "pt": "msg",
                "to": "Pause",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 928,
        "y": 256,
        "wires": [
            [
                "884560b8fb09b0ad"
            ]
        ]
    },
    {
        "id": "38e82f10caba549f",
        "type": "switch",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "property": "payload.is_playing",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 304,
        "wires": [
            [
                "69d7477a89bf5c91"
            ],
            [
                "4021da310e7ff026"
            ]
        ]
    },
    {
        "id": "864fbc661d21df94",
        "type": "subflow:e83aa6d3209a38ac",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "x": 934,
        "y": 352,
        "wires": [
            [
                "3dc4f300ede964da"
            ]
        ]
    },
    {
        "id": "3dc4f300ede964da",
        "type": "change",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "image",
                "pt": "flow",
                "to": "payload.track.album.images[0].url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.playpause",
                "pt": "msg",
                "to": "Play",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.isPlaying",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.pauseUpdate",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1008,
        "y": 304,
        "wires": [
            [
                "884560b8fb09b0ad"
            ]
        ]
    },
    {
        "id": "884560b8fb09b0ad",
        "type": "template",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "Set bg image",
        "field": "payload.bgImage",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "background-image:url({{{flow.image}}});",
        "output": "str",
        "x": 1190,
        "y": 256,
        "wires": [
            [
                "b903d41feea6da73"
            ]
        ]
    },
    {
        "id": "a0ee666226369892",
        "type": "switch",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "property": "req.query.pauseCounter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "testupdate",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 400,
        "wires": [
            [
                "864fbc661d21df94"
            ],
            [
                "0183632404f95517"
            ]
        ]
    },
    {
        "id": "4021da310e7ff026",
        "type": "random",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "low": "15",
        "high": "200",
        "inte": "true",
        "property": "testupdate",
        "x": 764,
        "y": 400,
        "wires": [
            [
                "a0ee666226369892"
            ]
        ]
    },
    {
        "id": "0183632404f95517",
        "type": "change",
        "z": "64c10cbe6a24b687",
        "g": "1e0790ad9ecd35a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.playpause",
                "pt": "msg",
                "to": "Play",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.isPlaying",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.pauseUpdate",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1136,
        "y": 400,
        "wires": [
            [
                "b903d41feea6da73"
            ]
        ]
    },
    {
        "id": "f70e88b4c3dab11d",
        "type": "group",
        "z": "64c10cbe6a24b687",
        "g": "2654f070e3870c4b",
        "name": "Authorisation",
        "style": {
            "label": true
        },
        "nodes": [
            "b17dc1fbe220c65d",
            "dd6c35c1270cea48",
            "cbe6c146aa774db5",
            "e4fcfc6b8fc08d7c"
        ],
        "x": 566,
        "y": 647,
        "w": 840,
        "h": 130
    },
    {
        "id": "b17dc1fbe220c65d",
        "type": "node-red-contrib-basicauth",
        "z": "64c10cbe6a24b687",
        "g": "f70e88b4c3dab11d",
        "name": "",
        "realm": "spotify",
        "username": "admin",
        "password": "admin",
        "x": 662,
        "y": 704,
        "wires": [
            [
                "dd6c35c1270cea48",
                "b852d5829934f97f"
            ],
            [
                "e4fcfc6b8fc08d7c"
            ]
        ]
    },
    {
        "id": "dd6c35c1270cea48",
        "type": "random",
        "z": "64c10cbe6a24b687",
        "g": "f70e88b4c3dab11d",
        "name": "",
        "low": "1",
        "high": "99999999999999",
        "inte": "true",
        "property": "payload",
        "x": 1116,
        "y": 688,
        "wires": [
            [
                "cbe6c146aa774db5"
            ]
        ]
    },
    {
        "id": "cbe6c146aa774db5",
        "type": "change",
        "z": "64c10cbe6a24b687",
        "g": "f70e88b4c3dab11d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "authstatus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 688,
        "wires": [
            []
        ]
    },
    {
        "id": "e4fcfc6b8fc08d7c",
        "type": "http response",
        "z": "64c10cbe6a24b687",
        "g": "f70e88b4c3dab11d",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 1116,
        "y": 736,
        "wires": []
    },
    {
        "id": "760717e21b1612bd",
        "type": "group",
        "z": "64c10cbe6a24b687",
        "g": "2654f070e3870c4b",
        "name": "Web request",
        "style": {
            "label": true
        },
        "nodes": [
            "1a57840367ef0c78",
            "7d9e0a9f21a96ddf"
        ],
        "x": 230,
        "y": 487,
        "w": 294,
        "h": 161
    },
    {
        "id": "1a57840367ef0c78",
        "type": "http in",
        "z": "64c10cbe6a24b687",
        "g": "760717e21b1612bd",
        "name": "",
        "url": "/spotify",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 326,
        "y": 528,
        "wires": [
            [
                "7d9e0a9f21a96ddf"
            ]
        ]
    },
    {
        "id": "7d9e0a9f21a96ddf",
        "type": "switch",
        "z": "64c10cbe6a24b687",
        "g": "760717e21b1612bd",
        "name": "",
        "property": "req.query.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "updateInfo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "playPause",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "skip",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 448,
        "y": 592,
        "wires": [
            [
                "20eff3cac95cc869"
            ],
            [
                "4cd8981aa2833d68"
            ],
            [
                "9fa926fa4adbf982"
            ],
            [
                "b17dc1fbe220c65d"
            ]
        ]
    }
]